import jwt from 'jsonwebtoken'

//admin authentication middleware
const authAdmin = async (req,res,next) =>{
    //compare token with jwt secret key
    try {
        const {atoken} =req.headers
        if(!atoken){
            return res.json({success:false,message:"Not authorised login again"})
        }
        //compare the token generated by browser for admin with secret key
        const token_decode = jwt.verify(atoken,process.env.JWT_SECRET)

        //if they dont match show false message
        if(token_decode!==process.env.ADMIN_EMAIL + process.env.ADMIN_PASSWORD){
            return res.json({success:false,message:"Not authorised login again"})
        }

        next()//call next middleware
        


    }
    //catch error 
    catch (error) {
        console.log(error)
        res.json({success:false,message:error.message})
    }
}

export default authAdmin